generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String         @id @default(uuid())
  name            String?
  username        String?        @unique
  bio             String?
  email           String?        @unique
  emailVerified   DateTime?
  coverImage      String?        @db.LongText()
  profileImage    String?        @db.LongText()
  hashedPassword  String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  hasNotification Boolean?
  followedBy      User[]         @relation("UserFollows")
  following       User[]         @relation("UserFollows")
  posts           Post[]
  likedPosts      Post[]         @relation("UserLikedPosts")
  comments        Comment[]
  notifications   Notification[]
}

model Post {
  id        String    @id @default(uuid())
  body      String
  image     String?   @db.LongText
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  likedIds  User[]    @relation("UserLikedPosts")
  comment   Comment[]

  @@index([authorId])
}

model Comment {
  id        String   @id @default(uuid())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@index([userId])
  @@index([postId])
}

model Notification {
  id        String   @id @unique @default(uuid())
  body      String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model UserFollows {
  A String
  B String

  @@unique([A, B], map: "_UserFollows_AB_unique")
  @@index([B], map: "_UserFollows_B_index")
  @@map("_UserFollows")
}

model UserLikedPosts {
  A String
  B String

  @@unique([A, B], map: "_UserLikedPosts_AB_unique")
  @@index([B], map: "_UserLikedPosts_B_index")
  @@map("_UserLikedPosts")

}